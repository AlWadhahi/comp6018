# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import course_registeration_pb2 as course__registeration__pb2


class CourseRegistrationStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddCourse = channel.unary_unary(
                '/CourseRegistration/AddCourse',
                request_serializer=course__registeration__pb2.AddCourseRequest.SerializeToString,
                response_deserializer=course__registeration__pb2.AddCourseResponse.FromString,
                )
        self.RegisterStudent = channel.unary_unary(
                '/CourseRegistration/RegisterStudent',
                request_serializer=course__registeration__pb2.RegisterStudentRequest.SerializeToString,
                response_deserializer=course__registeration__pb2.RegisterStudentResponse.FromString,
                )
        self.ListCourses = channel.unary_unary(
                '/CourseRegistration/ListCourses',
                request_serializer=course__registeration__pb2.ListCoursesRequest.SerializeToString,
                response_deserializer=course__registeration__pb2.ListCoursesResponse.FromString,
                )
        self.ListStudents = channel.unary_unary(
                '/CourseRegistration/ListStudents',
                request_serializer=course__registeration__pb2.ListStudentsRequest.SerializeToString,
                response_deserializer=course__registeration__pb2.ListStudentsResponse.FromString,
                )


class CourseRegistrationServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddCourse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterStudent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCourses(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListStudents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CourseRegistrationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddCourse': grpc.unary_unary_rpc_method_handler(
                    servicer.AddCourse,
                    request_deserializer=course__registeration__pb2.AddCourseRequest.FromString,
                    response_serializer=course__registeration__pb2.AddCourseResponse.SerializeToString,
            ),
            'RegisterStudent': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterStudent,
                    request_deserializer=course__registeration__pb2.RegisterStudentRequest.FromString,
                    response_serializer=course__registeration__pb2.RegisterStudentResponse.SerializeToString,
            ),
            'ListCourses': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCourses,
                    request_deserializer=course__registeration__pb2.ListCoursesRequest.FromString,
                    response_serializer=course__registeration__pb2.ListCoursesResponse.SerializeToString,
            ),
            'ListStudents': grpc.unary_unary_rpc_method_handler(
                    servicer.ListStudents,
                    request_deserializer=course__registeration__pb2.ListStudentsRequest.FromString,
                    response_serializer=course__registeration__pb2.ListStudentsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'CourseRegistration', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CourseRegistration(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddCourse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CourseRegistration/AddCourse',
            course__registeration__pb2.AddCourseRequest.SerializeToString,
            course__registeration__pb2.AddCourseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterStudent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CourseRegistration/RegisterStudent',
            course__registeration__pb2.RegisterStudentRequest.SerializeToString,
            course__registeration__pb2.RegisterStudentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCourses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CourseRegistration/ListCourses',
            course__registeration__pb2.ListCoursesRequest.SerializeToString,
            course__registeration__pb2.ListCoursesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListStudents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CourseRegistration/ListStudents',
            course__registeration__pb2.ListStudentsRequest.SerializeToString,
            course__registeration__pb2.ListStudentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
